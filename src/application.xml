<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
    http://www.springframework.org/schema/aop    
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
    ">
<!--     <aop:aspectj-autoproxy></aop:aspectj-autoproxy> -->
	<context:component-scan base-package="ssmtest.scy">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 容器处理前的操作配置-->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
			<value>classpath:config.properties</value>
			<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- 配置数据源 -->
	<bean id="jdbcDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.${test}driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
    <property name="messageConverters">  
        <list>  
            <ref bean="jsonHttpMessageConverter" />  
        </list>  
    </property>  
</bean>  
  
<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
    <property name="supportedMediaTypes">  
        <list>  
            <value>application/json;charset=UTF-8</value>  
        </list>  
    </property>  
</bean>  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="jdbcDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="ssmtest.scy.dao.UserDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  	<property name="dataSource" ref="jdbcDataSource" />
	</bean>
	<bean id="abstractbean" abstract="true">
		<property name="name" value="zhangsan" />
	</bean>
	
	<!-- name起到了别名的作用，可以用多个name 空格或者逗号进行分割 -->
	<bean id="beantest" class="ssmtest.scy.service.impl.BeanTest" init-method="test" parent="abstractbean">
		<constructor-arg index="0" type="String" value="衡水" />
		<property name="age" value="11" />
	</bean>
	<!-- alias起到了别名的作用，类似于bean的name属性 -->
	<alias name="beantest" alias="hello"/>
	
	<bean id="publicAspect2" class="ssmtest.scy.aop.PublicAspect2" ></bean>
	<!-- schema配置aop -->
	<aop:config>
		<aop:aspect ref="publicAspect2">
		 <aop:pointcut expression="execution(* find(..))" id="pointcut" />
		 <aop:before method="before" pointcut-ref="pointcut"/>
		 <aop:around method="round" pointcut-ref="pointcut"/>
		 <aop:after-returning method="afterreturn" pointcut-ref="pointcut"/>
		 <aop:after method="after" pointcut-ref="pointcut"/>
		</aop:aspect>
<!-- 		<aop:advisor advice-ref="publicAspect2" pointcut="execution(* find(..))" /> -->
	</aop:config>
</beans>